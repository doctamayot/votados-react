{"version":3,"sources":["components/posts.js","store.js","components/votes.js","components/orderbuttons.js","App.js","serviceWorker.js","index.js"],"names":["posts","id","title","description","url","votes","writer_avatar_url","post_image_url","createStore","state","action","type","Object","objectSpread","desBut","ascBut","applyMiddleware","store","next","console","log","result","getState","Votes","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","compare","a","b","voteArrows","e","index","map","indexOf","Math","floor","target","postVotes","classList","contains","newPosts","post","i","sort","reverse","setVote","subscribe","setState","dispatch","_this2","react_default","createElement","Row","className","key","Col","xs","href","alt","src","onClick","aria-hidden","Component","Buttons","orderAscendent","changeOrder","orderDescendent","Button","bsStyle","App","Grid","md","mdOffset","orderbuttons","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af3acfca.chunk.js","sourcesContent":["const posts = [\r\n    {\r\n      id: 1,\r\n      title: 'Manejo de dependencias en Ruby con Bundler',\r\n      description: 'Bundler es una manejador de dependencias para Ruby. Aunque viene incluido con Rails, Bundler no es exclusivo de Rails, lo puedes usar para manejar las dependencias de cualquier proyecto de Ruby.',\r\n      url: 'http://blog.makeitreal.camp/manejo-de-dependencias-en-ruby-con-bundler/',\r\n      votes: 42,\r\n      writer_avatar_url: '//a.disquscdn.com/uploads/users/2864/1155/avatar92.jpg?1481303405',\r\n      post_image_url: 'http://blog.makeitreal.camp/assets/images/bg-images/bundler.jpg',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Descubre si Make it Real es para ti',\r\n      description: 'En Make it Real buscamos entrenar a los desarrolladores Web que nosotros mismos quisiéramos contratar. Personas con autodisciplina que sean capaces de resolver problemas complejos y se adapten rápidamente a nuevas tecnologías y escenarios. En este post vamos a discutir algunas características de nuestro programa para que descubras si Make it Real es para ti.',\r\n      url: 'http://blog.makeitreal.camp/descubre-si-make-it-real-es-para-ti/',\r\n      votes: 43,\r\n      writer_avatar_url: '//a.disquscdn.com/uploads/users/2864/1155/avatar92.jpg?1481303405',\r\n      post_image_url: 'http://blog.makeitreal.camp/assets/images/bg-images/laptop-sublime.jpg',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: '¿Qué es código?',\r\n      description: 'Semáforos, automóviles, aviones, aeropuertos, satélites, el sistema financiero, gran parte de nuestras vidas depende del código que varias generaciones de programadores han escrito. Pero ¿qué es código? ¿quién lo ejecuta y cómo? En este post vamos a hacer un recorrido histórico para entender cómo es que la electricidad se convierte en código y cómo surgieron los lenguajes de programación.',\r\n      url: 'http://blog.makeitreal.camp/que-es-codigo/',\r\n      votes: 44,\r\n      writer_avatar_url: '//a.disquscdn.com/uploads/users/2864/1155/avatar92.jpg?1481303405',\r\n      post_image_url: 'http://blog.makeitreal.camp/assets/images/bg-images/code.jpg',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Aprende Desarrollo Web gratis',\r\n      description: '¿Quieres iniciar en el mundo del desarrollo Web y no sabes por dónde empezar? Conoce Aprende Desarrollo Web, un curso completamente gratis dirigido a personas sin experiencia en el que aprenderás a crear y publicar sitios interactivos en Internet con HTML, CSS y JavaScript.',\r\n      url: 'http://blog.makeitreal.camp/aprende-desarrollo-web-gratis/',\r\n      votes: 45,\r\n      writer_avatar_url: '//a.disquscdn.com/uploads/users/2864/1155/avatar92.jpg?1481303405',\r\n      post_image_url: 'http://blog.makeitreal.camp/assets/images/bg-images/aprende-desarrollo-web-bg.png',\r\n    },\r\n  ]\r\n\r\n  export default posts\r\n","import { createStore, applyMiddleware } from 'redux';\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === \"setVote\") {\r\n        return {\r\n            ...state,\r\n            posts: action.posts\r\n        } \r\n    } else if (action.type === \"changeOrder\") {\r\n        return {\r\n            ...state,\r\n            posts: action.posts,\r\n            desBut: action.desBut,\r\n            ascBut: action.ascBut\r\n        } \r\n    }\r\n    return state;\r\n}\r\n\r\nconst logger = store => next => action => {\r\n    console.log('dispatching', action)\r\n    let result = next(action)\r\n    console.log('next state', store.getState())\r\n    return result\r\n  }\r\n\r\nexport default createStore(reducer, applyMiddleware(logger));","import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport posts from './posts'\r\nimport store from \"../store\";\r\n\r\nclass Votes extends Component {\r\n    constructor() {\r\n      super();\r\n  \r\n      this.state = {\r\n        posts: posts.sort(this.compare),\r\n        ascBut: \"default\",\r\n        desBut: \"primary\"\r\n      }\r\n\r\n      store.subscribe(() => {\r\n        this.setState({\r\n          posts: store.getState().posts,\r\n          desBut: store.getState().desBut,\r\n          ascBut: store.getState().ascBut\r\n        })\r\n      })\r\n  \r\n    }\r\n    compare = (a,b) => {\r\n        if (a.votes < b.votes)\r\n          return -1;\r\n        if (a.votes > b.votes)\r\n          return 1;\r\n        return 0;\r\n      }\r\n    voteArrows = (e) => {\r\n      const index = this.state.posts.map(function(e) { return e.id; }).indexOf(Math.floor(e.target.id))\r\n      var postVotes = this.state.posts[index].votes\r\n      e.target.classList.contains(\"glyphicon-triangle-top\") ? postVotes += 1 : postVotes -= 1\r\n      var newPosts = this.state.posts.map((post, i) => i === index ? {id: post.id, title: post.title, description: post.description, url: post.url, votes: postVotes, writer_avatar_url: post.writer_avatar_url, post_image_url: post.post_image_url,} : post)\r\n      \r\n      var posts = this.state.desBut === \"primary\" ? newPosts.sort(this.compare) : newPosts.sort(this.compare).reverse()\r\n      this.setVote(posts)\r\n      \r\n    }\r\n    setVote(posts) {    \r\n      store.dispatch( {\r\n        type: \"setVote\",\r\n        posts\r\n      })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            {this.state.posts.map((post, index) =>  \r\n                <Row className=\"posts-grid\" key={post.id}>\r\n                  <Col xs={4}><a href={post.url}><img alt={ post.id } className=\"image\" src={ post.post_image_url } /></a></Col>\r\n                  <Col className=\"votes\" xs={1}>\r\n                    <span onClick={this.voteArrows} id={post.id} className=\"glyphicon glyphicon-triangle-top arrow\" aria-hidden=\"true\" />\r\n                    {post.votes}\r\n                    <span onClick={this.voteArrows} id={post.id} className=\"glyphicon glyphicon-triangle-bottom arrow\" aria-hidden=\"true\" />\r\n                  </Col>\r\n                  <Col xs={7}><a href={post.url}><p>{ post.title }</p></a><p>{ post.description }</p><p className=\"writtenby\">Escrito por: <img alt={ post.id } className=\"authoravatar\" src={ post.writer_avatar_url } /></p></Col>\r\n                </Row>\r\n                )}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Votes;\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap'\r\nimport posts from './posts'\r\nimport store from \"../store\";\r\n\r\nclass Buttons extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        posts: posts.sort(this.compare),\r\n        ascBut: \"default\",\r\n        desBut: \"primary\"\r\n      }\r\n      store.subscribe(() => {\r\n        this.setState({\r\n          posts: store.getState().posts,\r\n          desBut: store.getState().desBut,\r\n          ascBut: store.getState().ascBut\r\n        })\r\n      })\r\n    }\r\n    compare = (a,b) => {\r\n      if (a.votes < b.votes)\r\n        return -1;\r\n      if (a.votes > b.votes)\r\n        return 1;\r\n      return 0;\r\n    }\r\n    orderAscendent = () => {\r\n      var desBut = \"default\"\r\n      var ascBut = \"primary\"\r\n      var posts = this.state.posts.sort(this.compare).reverse()\r\n      this.changeOrder(desBut, ascBut, posts)\r\n    }\r\n    orderDescendent = () => {\r\n      var desBut = \"primary\"\r\n      var ascBut = \"default\"\r\n      var posts = this.state.posts.sort(this.compare)\r\n      this.changeOrder(desBut, ascBut, posts)\r\n      \r\n    }\r\n    changeOrder(desBut, ascBut, posts) {    \r\n      store.dispatch( {\r\n        type: \"changeOrder\",\r\n        posts: posts,\r\n        desBut: desBut,\r\n        ascBut: ascBut\r\n      })\r\n    }\r\n\r\n    render() {\r\n        return (  \r\n            <div className=\"general-grid\">\r\n            <p>Orden: \r\n              <Button className=\"boton\" bsStyle={this.state.ascBut} onClick={this.orderAscendent}>Ascendente</Button>\r\n              <Button className=\"boton\" bsStyle={this.state.desBut} onClick={this.orderDescendent}>Descendente</Button>\r\n            </p>\r\n          </div>\r\n        );\r\n  }\r\n}\r\nexport default Buttons;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Grid, Row, Col } from 'react-bootstrap'\r\nimport Votes from \"./components/votes\";\r\nimport Buttons from \"./components/orderbuttons\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Row className=\"\">\r\n          <Col md={8} mdOffset={2} >\r\n            <h1>Blog posts populares</h1>\r\n            <Buttons />\r\n            <Votes />\r\n          </Col>\r\n        </Row>\r\n    </Grid>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}